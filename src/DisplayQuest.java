/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement; 
import java.sql.ResultSet;
import java.sql.ResultSetMetaData; 
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.List; 
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JLabel;
public class DisplayQuest extends javax.swing.JFrame {

    /**
     * Creates new form DisplayQuest
     */
    public DisplayQuest() {
        initComponents();
        Connect();
    }
    Connection con;
    PreparedStatement pst;
    ResultSet rs; 
    
    public void Connect(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/normalization", "root", "Paologab@030802");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        DisplayProb1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Prob1Table = new javax.swing.JTable();
        DisplayProb2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Prob2Table = new javax.swing.JTable();
        DisplayProb3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        Prob3Table = new javax.swing.JTable();
        DisplayProb4 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        Prob4Table = new javax.swing.JTable();
        DisplayProb5 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        Prob5Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        DisplayProb6 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        Prob6Table = new javax.swing.JTable();
        DisplayProb7 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        Prob7Table = new javax.swing.JTable();
        DisplayProb8 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        Prob8Table = new javax.swing.JTable();
        DisplayProb9 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        Prob9Table = new javax.swing.JTable();
        DisplayProb10 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        Prob10Table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        DisplayProb11 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        Prob11Table = new javax.swing.JTable();
        DisplayProb12 = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        Prob12Table = new javax.swing.JTable();
        DisplayProb13 = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        Prob13Table = new javax.swing.JTable();
        DisplayProb14 = new javax.swing.JButton();
        jScrollPane15 = new javax.swing.JScrollPane();
        Prob14Table = new javax.swing.JTable();
        DisplayProb15 = new javax.swing.JButton();
        jScrollPane16 = new javax.swing.JScrollPane();
        Prob15Table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DisplayProb1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb1.setText("DISPLAY TABLE");
        DisplayProb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb1ActionPerformed(evt);
            }
        });
        jPanel1.add(DisplayProb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 810, -1, 30));

        Prob1Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Admission_Number", "Name", "Campus", "Program", "Sex", "Birthday", "Birthplace", "Religion", "Nationality", "Permanent_Address", "City", "Postal_Code", "Contact_Number", "Email_Address"
            }
        ));
        Prob1Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(Prob1Table);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 660, 850, 120));

        DisplayProb2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb2.setText("DISPLAY TABLE");
        DisplayProb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb2ActionPerformed(evt);
            }
        });
        jPanel1.add(DisplayProb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 1380, -1, 30));

        Prob2Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Campus", "Email_Address"
            }
        ));
        Prob2Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(Prob2Table);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 1230, 225, 110));

        DisplayProb3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb3.setText("DISPLAY TABLE");
        DisplayProb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb3ActionPerformed(evt);
            }
        });
        jPanel1.add(DisplayProb3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 2040, -1, 30));

        Prob3Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Program", "Address", "Birthplace"
            }
        ));
        Prob3Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane4.setViewportView(Prob3Table);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 1890, 301, 100));

        DisplayProb4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb4.setText("DISPLAY TABLE");
        DisplayProb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb4ActionPerformed(evt);
            }
        });
        jPanel1.add(DisplayProb4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 2600, -1, 30));

        Prob4Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Relationship", "Occupation"
            }
        ));
        Prob4Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane5.setViewportView(Prob4Table);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 2450, 227, 100));

        DisplayProb5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb5.setText("DISPLAY TABLE");
        DisplayProb5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb5ActionPerformed(evt);
            }
        });
        jPanel1.add(DisplayProb5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 3160, -1, 30));

        Prob5Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name_Of_Previous School", "School_ID"
            }
        ));
        Prob5Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane6.setViewportView(Prob5Table);

        jPanel1.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 3010, 150, 100));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Easy ulet.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, -1, -1));

        jTabbedPane1.addTab("EASY QUESTIONS", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DisplayProb6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb6.setText("DISPLAY TABLE");
        DisplayProb6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb6ActionPerformed(evt);
            }
        });
        jPanel2.add(DisplayProb6, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 840, -1, 30));

        Prob6Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Campus", "Number_of__BSA_students"
            }
        ));
        Prob6Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane7.setViewportView(Prob6Table);

        jPanel2.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 690, 152, 90));

        DisplayProb7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb7.setText("DISPLAY TABLE");
        DisplayProb7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb7ActionPerformed(evt);
            }
        });
        jPanel2.add(DisplayProb7, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 1410, -1, 30));

        Prob7Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "G_City", "Number_of_Guardians"
            }
        ));
        Prob7Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane8.setViewportView(Prob7Table);

        jPanel2.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 1260, 152, 90));

        DisplayProb8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb8.setText("DISPLAY TABLE");
        DisplayProb8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb8ActionPerformed(evt);
            }
        });
        jPanel2.add(DisplayProb8, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 2000, -1, 30));

        Prob8Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nationality", "Campus", "Total_Applicants"
            }
        ));
        Prob8Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane9.setViewportView(Prob8Table);

        jPanel2.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 1850, 227, 90));

        DisplayProb9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb9.setText("DISPLAY TABLE");
        DisplayProb9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb9ActionPerformed(evt);
            }
        });
        jPanel2.add(DisplayProb9, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 2550, -1, 30));

        Prob9Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "School_ID", "Total"
            }
        ));
        Prob9Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane10.setViewportView(Prob9Table);

        jPanel2.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 2410, 150, 90));

        DisplayProb10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb10.setText("DISPLAY TABLE");
        DisplayProb10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb10ActionPerformed(evt);
            }
        });
        jPanel2.add(DisplayProb10, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 3220, -1, -1));

        Prob10Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Birthmonth", "Postal Code", "Total"
            }
        ));
        Prob10Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane11.setViewportView(Prob10Table);

        jPanel2.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 3060, 190, 90));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Average Updated ulit.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, -1, -1));

        jTabbedPane1.addTab("AVERAGE QUESTIONS", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DisplayProb11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb11.setText("DISPLAY TABLE");
        DisplayProb11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb11ActionPerformed(evt);
            }
        });
        jPanel3.add(DisplayProb11, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 970, -1, 30));

        Prob11Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Admission_Number", "Name", "Birthday", "Guardian_Name", "Name_of_Previous_School"
            }
        ));
        Prob11Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane12.setViewportView(Prob11Table);

        jPanel3.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 820, 376, 100));

        DisplayProb12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb12.setText("DISPLAY TABLE");
        DisplayProb12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb12ActionPerformed(evt);
            }
        });
        jPanel3.add(DisplayProb12, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 1690, -1, -1));

        Prob12Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Permanent_Address", "Name_Of_Previous_School"
            }
        ));
        Prob12Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane13.setViewportView(Prob12Table);

        jPanel3.add(jScrollPane13, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 1540, 225, 100));

        DisplayProb13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb13.setText("DISPLAY TABLE");
        DisplayProb13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb13ActionPerformed(evt);
            }
        });
        jPanel3.add(DisplayProb13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 2390, -1, 30));

        Prob13Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Admission_Number", "Name", "Permanent_Address", "Nationality", "Philsys_ID", "Guardian_Name", "Relationship", "G_Contact_Number"
            }
        ));
        Prob13Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane14.setViewportView(Prob13Table);

        jPanel3.add(jScrollPane14, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 2240, 600, 100));

        DisplayProb14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb14.setText("DISPLAY TABLE");
        DisplayProb14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb14ActionPerformed(evt);
            }
        });
        jPanel3.add(DisplayProb14, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 3310, -1, -1));

        Prob14Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Admission_Number", "Name", "Campus", "Permanent_Address", "Name_Of_Previous_School", "Guardian_Name", "Relationship"
            }
        ));
        Prob14Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane15.setViewportView(Prob14Table);

        jPanel3.add(jScrollPane15, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 3160, 527, 100));

        DisplayProb15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DisplayProb15.setText("DISPLAY TABLE");
        DisplayProb15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayProb15ActionPerformed(evt);
            }
        });
        jPanel3.add(DisplayProb15, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 4170, -1, 30));

        Prob15Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Student_Name", "School_ID", "Name_of_Previous_School", "School_Address", "Class_Standing"
            }
        ));
        Prob15Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane16.setViewportView(Prob15Table);

        jPanel3.add(jScrollPane16, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 4020, 380, 100));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diff upated ulit.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -40, -1, -1));

        jTabbedPane1.addTab("DIFFICULT QUESTIONS", jPanel3);

        jScrollPane1.setViewportView(jTabbedPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1013, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 4307, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DisplayProb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb1ActionPerformed
        // TODO add your handling code here:
        try{
            int q;
            pst = con.prepareStatement("SELECT * FROM student_info WHERE Program = 'BSIT' OR Program = 'BSCS'");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Prob1Table.getModel();
            RecordTable.setRowCount(0); 
            while (rs.next()){
                Vector v2 = new Vector(); 
                for (int a= 1 ; a<=q ; a++){
                    v2.add(rs.getString("Admission_Number"));
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("Campus"));
                    v2.add(rs.getString("Program"));
                    v2.add(rs.getString("Sex"));
                    v2.add(rs.getString("Birthday"));
                    v2.add(rs.getString("Birthplace"));
                    v2.add(rs.getString("Religion"));
                    v2.add(rs.getString("Nationality"));
                    v2.add(rs.getString("Permanent_Address"));
                    v2.add(rs.getString("City"));
                    v2.add(rs.getString("Postal_Code"));
                    v2.add(rs.getString("Contact_Number"));
                    v2.add(rs.getString("Email_Address")); 
                }
            RecordTable.addRow(v2);
            }
        }catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_DisplayProb1ActionPerformed

    private void DisplayProb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb2ActionPerformed
        // TODO add your handling code here:
        try{
            int q;
            pst = con.prepareStatement("SELECT Name, Campus, Email_Address FROM student_info WHERE Program = 'BSIT' AND Sex = 'M'");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Prob2Table.getModel();
            RecordTable.setRowCount(0); 
            while (rs.next()){
                Vector v2 = new Vector(); 
                for (int a= 1 ; a<=q ; a++){
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("Campus"));
                    v2.add(rs.getString("Email_Address")); 
                }
            RecordTable.addRow(v2);
            }
        }catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_DisplayProb2ActionPerformed

    private void DisplayProb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb3ActionPerformed
        // TODO add your handling code here:
        try{
            int q;
            pst = con.prepareStatement("SELECT Name, Program, Permanent_Address, Birthplace FROM student_info WHERE Program = 'BSIT' OR Program = 'BSCS' OR Program = 'BSCPE' ORDER BY 2");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Prob3Table.getModel();
            RecordTable.setRowCount(0); 
            while (rs.next()){
                Vector v2 = new Vector(); 
                for (int a= 1 ; a<=q ; a++){
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("Program"));
                    v2.add(rs.getString("Birthplace"));
                    v2.add(rs.getString("Permanent_Address"));
                }
            RecordTable.addRow(v2);
            }
        }catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_DisplayProb3ActionPerformed

    private void DisplayProb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb4ActionPerformed
        // TODO add your handling code here:
        try{
            int q;
            pst = con.prepareStatement("SELECT Guardian_Name, Relationship, Occupation FROM guardian_info WHERE G_Address LIKE '%Manila%' OR G_Address LIKE '%Maynila%'");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Prob4Table.getModel();
            RecordTable.setRowCount(0); 
            while (rs.next()){
                Vector v2 = new Vector(); 
                for (int a= 1 ; a<=q ; a++){
                    v2.add(rs.getString("Guardian_Name"));
                    v2.add(rs.getString("Relationship"));
                    v2.add(rs.getString("Occupation"));
                }
            RecordTable.addRow(v2);
            }
        }catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_DisplayProb4ActionPerformed

    private void DisplayProb5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb5ActionPerformed
        // TODO add your handling code here:
        try{
            int q;
            pst = con.prepareStatement("SELECT Name_of_Previous_School, School_ID FROM school_info WHERE Name_of_Previous_School LIKE '%High School%'");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Prob5Table.getModel();
            RecordTable.setRowCount(0); 
            while (rs.next()){
                Vector v2 = new Vector(); 
                for (int a= 1 ; a<=q ; a++){
                    v2.add(rs.getString("School_ID"));
                    v2.add(rs.getString("Name_of_Previous_School"));
                }
            RecordTable.addRow(v2);
            }
        }catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_DisplayProb5ActionPerformed

    private void DisplayProb11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb11ActionPerformed
        // TODO add your handling code here:
        try {
            int q;
            pst = con.prepareStatement("SELECT s.Admission_Number, s.Name, s.Birthday, g.Guardian_Name, sc.Name_of_Previous_School FROM student_info AS s, guardian_info AS g, school_info AS sc WHERE s.Admission_Number = g.Admission_Number AND  s.Admission_Number = sc.Admission_Number AND s.Birthday LIKE '%2002%' ");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Prob11Table.getModel();
            RecordTable.setRowCount(0); 
            while (rs.next()){
                Vector v2 = new Vector(); 
                for (int a= 1 ; a<=q ; a++){
                    v2.add(rs.getString("Admission_Number"));
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("Birthday"));
                    v2.add(rs.getString("Guardian_Name"));
                    v2.add(rs.getString("Name_of_Previous_School"));
                    
                }
                RecordTable.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayProb11ActionPerformed

    private void DisplayProb12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb12ActionPerformed
        // TODO add your handling code here:
        try {
            int q;
            pst = con.prepareStatement("SELECT s.Name, s.Permanent_Address, sch.Name_of_Previous_School FROM student_info AS s, school_info AS sch WHERE s.Admission_Number = sch.Admission_Number AND s.Program = 'BSIT' AND s.Permanent_Address LIKE '%Manila%'");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Prob12Table.getModel();
            RecordTable.setRowCount(0); 
            while (rs.next()){
                Vector v2 = new Vector(); 
                for (int a= 1 ; a<=q ; a++){
                    
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("Permanent_Address"));
                    v2.add(rs.getString("Name_of_Previous_School"));
                }
                RecordTable.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayProb12ActionPerformed

    private void DisplayProb13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb13ActionPerformed
        // TODO add your handling code here:
        try {
            int q;
            pst = con.prepareStatement("SELECT s.Admission_Number, s.Name, s.Permanent_Address, s.Nationality, g.Philsys_ID, g.Guardian_Name, g.Relationship, g.G_Contact_Number FROM student_info AS s, guardian_info AS g WHERE s.Admission_Number = g.Admission_Number AND s.Nationality <> 'Filipino' AND s.Permanent_Address LIKE '%Manila%'");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Prob13Table.getModel();
            RecordTable.setRowCount(0); 
            while (rs.next()){
                Vector v2 = new Vector(); 
                for (int a= 1 ; a<=q ; a++){
                    v2.add(rs.getString("Admission_Number"));
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("Permanent_Address"));
                    v2.add(rs.getString("Nationality"));
                    v2.add(rs.getString("Philsys_ID"));
                    v2.add(rs.getString("Guardian_Name"));
                    v2.add(rs.getString("Relationship"));
                    v2.add(rs.getString("G_Contact_Number"));
                }
                RecordTable.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayProb13ActionPerformed

    private void DisplayProb14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb14ActionPerformed
        // TODO add your handling code here:
        try {
            int q;
            pst = con.prepareStatement("SELECT s.Admission_Number, s.Name, s.Campus, s.Permanent_Address, sch.Name_of_Previous_School, g.Guardian_Name, g.Relationship FROM student_info AS s, school_info AS sch, guardian_info AS g  WHERE s.Admission_Number = sch.Admission_Number AND s.Admission_Number = g.Admission_Number AND s.Campus IN ('Sun and Moon', 'Biringan') AND s.Permanent_Address NOT LIKE '%Manila%' AND sch.Start_Date = 'Grade 11' AND sch.End_Date = 'Grade 12'");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Prob14Table.getModel();
            RecordTable.setRowCount(0); 
            while (rs.next()){
                Vector v2 = new Vector(); 
                for (int a= 1 ; a<=q ; a++){
                    v2.add(rs.getString("Admission_Number"));
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("Campus"));
                    v2.add(rs.getString("Permanent_Address"));
                    v2.add(rs.getString("Name_of_Previous_School"));
                    v2.add(rs.getString("Guardian_Name"));
                    v2.add(rs.getString("Relationship"));
                }
                RecordTable.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayProb14ActionPerformed

    private void DisplayProb15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb15ActionPerformed
        // TODO add your handling code here:
        try {
            int q;
            pst = con.prepareStatement("SELECT Student.Name, school.School_ID, school.Name_of_Previous_School, school.School_Address AS School_Address, school.Class_Standing FROM student_info AS Student, school_info AS school WHERE student.Admission_Number = school.Admission_Number AND school.School_ID LIKE '3%'");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Prob15Table.getModel();
            RecordTable.setRowCount(0); 
            while (rs.next()){
                Vector v2 = new Vector(); 
                for (int a= 1 ; a<=q ; a++){
                    v2.add(rs.getString("Name"));
                    v2.add(rs.getString("School_ID"));
                    v2.add(rs.getString("Name_of_Previous_School"));
                    v2.add(rs.getString("School_Address"));
                    v2.add(rs.getString("Class_Standing"));
                }
                RecordTable.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayProb15ActionPerformed

    private void DisplayProb10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb10ActionPerformed
        // TODO add your handling code here:
        try {
            int q;
            pst = con.prepareStatement("SELECT month(Birthday) AS Birthmonth, Postal_Code,COUNT(*) AS Total FROM student_info WHERE (month(Birthday) = 1 OR month(Birthday) = 12 OR month(Birthday) = 10 OR month(Birthday) = 2 OR month(Birthday) = 3) AND Postal_Code LIKE '1%0' GROUP BY Birthday, Postal_Code ORDER BY 1 DESC");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel)Prob10Table.getModel();
            RecordTable.setRowCount(0);
            while (rs.next()){
                String birthday = rs.getString("Birthmonth");
                String postalCode = rs.getString("Postal_Code");
                int count = rs.getInt("Total");

                Vector<Object> row = new Vector<>();
                row.add(birthday);
                row.add(postalCode);
                row.add(count);

                RecordTable.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayProb10ActionPerformed

    private void DisplayProb9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb9ActionPerformed
        // TODO add your handling code here:
        try {
            int q;
            pst = con.prepareStatement("SELECT School_ID, COUNT(*) AS Total FROM school_info WHERE Class_Standing LIKE '%Honor%' GROUP BY School_ID");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel)Prob9Table.getModel();
            RecordTable.setRowCount(0);
            while (rs.next()){
                String schoolID = rs.getString("School_ID");
                int count = rs.getInt("Total");

                Vector<Object> row = new Vector<>();
                row.add(schoolID);
                row.add(count);

                RecordTable.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayProb9ActionPerformed

    private void DisplayProb8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb8ActionPerformed
        // TODO add your handling code here:
        try {
            int q;
            pst = con.prepareStatement("SELECT Nationality, Campus, COUNT(*) AS 'Total_Applicants' FROM student_info GROUP BY Nationality, Campus ORDER BY 2");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel)Prob8Table.getModel();
            RecordTable.setRowCount(0);
            while (rs.next()){
                String nationality = rs.getString("Nationality");
                String campus = rs.getString("Campus");
                int count = rs.getInt("Total_Applicants");

                Vector<Object> row = new Vector<>();
                row.add(nationality);
                row.add(campus);
                row.add(count);

                RecordTable.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayProb8ActionPerformed

    private void DisplayProb7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb7ActionPerformed
        // TODO add your handling code here:
        try {
            int q;
            pst = con.prepareStatement("SELECT  G_City, COUNT(*) AS 'Number_of_Guardians' FROM guardian_info WHERE Occupation NOT LIKE '%None%' GROUP BY G_City");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel)Prob7Table.getModel();
            RecordTable.setRowCount(0);
            while (rs.next()){
                String gCity = rs.getString("G_City");
                int count = rs.getInt("Number_of_Guardians");

                Vector<Object> row = new Vector<>();
                row.add(gCity);
                row.add(count);

                RecordTable.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(updateJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayProb7ActionPerformed

    private void DisplayProb6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayProb6ActionPerformed
        // TODO add your handling code here:
        try {
            int q;
            pst = con.prepareStatement("SELECT Campus, COUNT(*) AS 'Number_of_BSA_students' FROM student_info WHERE Nationality = 'Filipino' AND Program = 'BSA' GROUP BY Campus");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel)Prob6Table.getModel();
            RecordTable.setRowCount(0);
            while (rs.next()){

                String campus = rs.getString("Campus");
                int count = rs.getInt("Number_of_BSA_students");

                Vector<Object> row = new Vector<>();
                row.add(campus);
                row.add(count);
                RecordTable.addRow(row);

            }
        } catch (SQLException ex) {
            Logger.getLogger(updateJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayProb6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayQuest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayQuest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayQuest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayQuest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayQuest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DisplayProb1;
    private javax.swing.JButton DisplayProb10;
    private javax.swing.JButton DisplayProb11;
    private javax.swing.JButton DisplayProb12;
    private javax.swing.JButton DisplayProb13;
    private javax.swing.JButton DisplayProb14;
    private javax.swing.JButton DisplayProb15;
    private javax.swing.JButton DisplayProb2;
    private javax.swing.JButton DisplayProb3;
    private javax.swing.JButton DisplayProb4;
    private javax.swing.JButton DisplayProb5;
    private javax.swing.JButton DisplayProb6;
    private javax.swing.JButton DisplayProb7;
    private javax.swing.JButton DisplayProb8;
    private javax.swing.JButton DisplayProb9;
    private javax.swing.JTable Prob10Table;
    private javax.swing.JTable Prob11Table;
    private javax.swing.JTable Prob12Table;
    private javax.swing.JTable Prob13Table;
    private javax.swing.JTable Prob14Table;
    private javax.swing.JTable Prob15Table;
    private javax.swing.JTable Prob1Table;
    private javax.swing.JTable Prob2Table;
    private javax.swing.JTable Prob3Table;
    private javax.swing.JTable Prob4Table;
    private javax.swing.JTable Prob5Table;
    private javax.swing.JTable Prob6Table;
    private javax.swing.JTable Prob7Table;
    private javax.swing.JTable Prob8Table;
    private javax.swing.JTable Prob9Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
